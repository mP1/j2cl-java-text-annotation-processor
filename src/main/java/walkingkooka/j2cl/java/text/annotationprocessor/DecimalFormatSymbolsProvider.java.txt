/*
 * Copyright 2019 Miroslav Pokorny (github.com/mP1)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package walkingkooka.j2cl.java.text;

final class DecimalFormatSymbolsProvider {

  public final static String ANNOTATION_PROCESSOR_LOCALES_FILTER = $FILTERED_LOCALES;

  public final static String SELECTED_LOCALES = $SELECTED_LOCALES;

$REGISTER_METHOD

    private DecimalFormatSymbolsProvider(final String locales,
                                         final char decimalSeparator,
                                         final char digit,
                                         final String exponentSeparator,
                                         final char groupingSeparator,
                                         final String infinity,
                                         final String internationalCurrencySymbol,
                                         final char minusSign,
                                         final char monetaryDecimalSeparator,
                                         final String nan,
                                         final char patternSeparator,
                                         final char percent,
                                         final char perMill,
                                         final char zeroDigit) {
        super();
        this.locales = locales;
        this.decimalSeparator = decimalSeparator;
        this.digit = digit;
        this.exponentSeparator = exponentSeparator;
        this.groupingSeparator = groupingSeparator;
        this.infinity = infinity;
        this.internationalCurrencySymbol = internationalCurrencySymbol;
        this.minusSign = minusSign;
        this.monetaryDecimalSeparator = monetaryDecimalSeparator;
        this.nan = nan;
        this.patternSeparator = patternSeparator;
        this.percent = percent;
        this.perMill = perMill;
        this.zeroDigit = zeroDigit;
    }

    final String locales;
    final char decimalSeparator;
    final char digit;
    final String exponentSeparator;
    final char groupingSeparator;
    final String infinity;
    final String internationalCurrencySymbol;
    final char minusSign;
    final char monetaryDecimalSeparator;
    final String nan;
    final char patternSeparator;
    final char percent;
    final char perMill;
    final char zeroDigit;
}
